@page "/"
@using FoundFlow.Frontend.Components
@using FoundFlow.Frontend.Pages.Helpers
@layout Layout.CleanLayout
@inject NavigationManager NavigationManager
@rendermode InteractiveWebAssembly

<PageTitle>Found Flow | Login</PageTitle>

<div class="login-card d-flex justify-content-center align-items-center">
    <div class="card">
        <div class="col-24 pt-5">
            <div class="logo">
                <img src="img/logo-with-text-02.svg" class="w-100" alt="logo-found-flow"/>
            </div>
        </div>
        <form enctype="application/x-www-form-urlencoded" @onsubmit:preventDefault @onsubmit="OnSubmit" class="card-body p-4">
            
            <Input Id="username" 
                   Type="text" 
                   Autocomplete="email"
                   Value="@Email"
                   ValueChanged="@(value => { Email = value; })"
                   Label="Email" 
                   Placeholder="nome@exemplo.com.br" 
                   AdditionalClass="col-24 p-3"
                   ErrorMessage="@EmailError"
            />

            <Input Id="password"
                   Type="password"
                   Autocomplete="current-password"
                   Value="@Password"
                   ValueChanged="@(value => { Password = value; })"
                   Label="Senha"
                   Placeholder="******"
                   AdditionalClass="col-24 p-3"
                   ErrorMessage="@PasswordError"
            />
            <br/>
            <div class="col-24 p-3">
                <button type="submit" class="btn btn-primary w-100 btn-lg">Entrar</button>
            </div>
            <div class="col-24 p-3">
                <p>Não está cadastrado? <a href="#" @onclick:preventDefault @onclick="NavigateToRegister">Comece aqui!</a></p>
            </div>
        </form>
    </div>
</div>
@code
{
    private string Email { get; set; } = string.Empty;
    private string EmailError { get; set; } = string.Empty;

    private string Password { get; set; } = string.Empty;
    private string PasswordError { get; set; } = string.Empty;
    
    private void NavigateToDashboard() => NavigationManager.NavigateTo("/dashboard");
    private void NavigateToRegister() => NavigationManager.NavigateTo("/register");

    private void OnSubmit()
    {
        StateHasChanged();
        EmailError = Validations.EmailIsValid(Email, ErrorMessages.EmailInvalid);
        PasswordError = Validations.TextIsNullOrEmpty(Password, ErrorMessages.PasswordInvalid);

        if (Validations.VerifyIfNoExistErrors(EmailError, PasswordError))
        {
            NavigateToDashboard();
        }
    }
}
